// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: wechat.proto
// Protobuf C++ Version: 5.27.2

#include "wechat.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace wechat {

    inline constexpr WechatRequest::Impl_::Impl_(
            ::_pbi::ConstantInitialized) noexcept
            : user_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
              friend_name_(
                      &::google::protobuf::internal::fixed_address_empty_string,
                      ::_pbi::ConstantInitialized()),
              _cached_size_{0} {}

    template<typename>
    PROTOBUF_CONSTEXPR WechatRequest::WechatRequest(::_pbi::ConstantInitialized)
            : _impl_(::_pbi::ConstantInitialized()) {}

    struct WechatRequestDefaultTypeInternal {
        PROTOBUF_CONSTEXPR WechatRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}

        ~WechatRequestDefaultTypeInternal() {}

        union {
            WechatRequest _instance;
        };
    };

    PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatRequestDefaultTypeInternal
    _WechatRequest_default_instance_;

    inline constexpr WechatReply::Impl_::Impl_(
            ::_pbi::ConstantInitialized) noexcept
            : reply_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
              _cached_size_{0} {}

    template<typename>
    PROTOBUF_CONSTEXPR WechatReply::WechatReply(::_pbi::ConstantInitialized)
            : _impl_(::_pbi::ConstantInitialized()) {}

    struct WechatReplyDefaultTypeInternal {
        PROTOBUF_CONSTEXPR WechatReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}

        ~WechatReplyDefaultTypeInternal() {}

        union {
            WechatReply _instance;
        };
    };

    PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WechatReplyDefaultTypeInternal
    _WechatReply_default_instance_;
}  // namespace wechat
static constexpr const ::_pb::EnumDescriptor **
        file_level_enum_descriptors_wechat_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor **
        file_level_service_descriptors_wechat_2eproto = nullptr;
const ::uint32_t
        TableStruct_wechat_2eproto::offsets[]
ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
                ~0u,  // no _has_bits_
                PROTOBUF_FIELD_OFFSET(::wechat::WechatRequest, _internal_metadata_),
                ~0u,  // no _extensions_
                ~0u,  // no _oneof_case_
                ~0u,  // no _weak_field_map_
                ~0u,  // no _inlined_string_donated_
                ~0u,  // no _split_
                ~0u,  // no sizeof(Split)
                PROTOBUF_FIELD_OFFSET(::wechat::WechatRequest, _impl_.user_name_),
                PROTOBUF_FIELD_OFFSET(::wechat::WechatRequest, _impl_.friend_name_),
                ~0u,  // no _has_bits_
                PROTOBUF_FIELD_OFFSET(::wechat::WechatReply, _internal_metadata_),
                ~0u,  // no _extensions_
                ~0u,  // no _oneof_case_
                ~0u,  // no _weak_field_map_
                ~0u,  // no _inlined_string_donated_
                ~0u,  // no _split_
                ~0u,  // no sizeof(Split)
                PROTOBUF_FIELD_OFFSET(::wechat::WechatReply, _impl_.reply_),
        };

static const ::_pbi::MigrationSchema
        schemas[]
ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0,  -1, -1, sizeof(::wechat::WechatRequest)},
        {10, -1, -1, sizeof(::wechat::WechatReply)},
};
static const ::_pb::Message *const file_default_instances[] = {
        &::wechat::_WechatRequest_default_instance_._instance,
        &::wechat::_WechatReply_default_instance_._instance,
};
const char descriptor_table_protodef_wechat_2eproto[]
ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
                "\n\014wechat.proto\022\006wechat\"7\n\rWechatRequest\022"
                "\021\n\tuser_name\030\001 \001(\t\022\023\n\013friend_name\030\002 \001(\t\""
                "\034\n\013WechatReply\022\r\n\005reply\030\001 \001(\t2\201\001\n\rWechat"
                "Service\0227\n\tAddFriend\022\025.wechat.WechatRequ"
                "est\032\023.wechat.WechatReply\0227\n\tDelFriend\022\025."
                "wechat.WechatRequest\032\023.wechat.WechatRepl"
                "yb\006proto3"
        };
static ::absl::once_flag descriptor_table_wechat_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable
descriptor_table_wechat_2eproto = {
        false,
        false,
        249,
        descriptor_table_protodef_wechat_2eproto,
        "wechat.proto",
        &descriptor_table_wechat_2eproto_once,
        nullptr,
        0,
        2,
        schemas,
        file_default_instances,
        TableStruct_wechat_2eproto::offsets,
        file_level_enum_descriptors_wechat_2eproto,
        file_level_service_descriptors_wechat_2eproto,
};
namespace wechat {
// ===================================================================

    class WechatRequest::_Internal {
    public:
    };

    WechatRequest::WechatRequest(::google::protobuf::Arena *arena)
            : ::google::protobuf::Message(arena) {
        SharedCtor(arena);
        // @@protoc_insertion_point(arena_constructor:wechat.WechatRequest)
    }

    inline PROTOBUF_NDEBUG_INLINE WechatRequest::Impl_::Impl_(
            ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena *arena,
            const Impl_ &from, const ::wechat::WechatRequest &from_msg)
            : user_name_(arena, from.user_name_),
              friend_name_(arena, from.friend_name_),
              _cached_size_{0} {}

    WechatRequest::WechatRequest(
            ::google::protobuf::Arena *arena,
            const WechatRequest &from)
            : ::google::protobuf::Message(arena) {
        WechatRequest *const _this = this;
        (void) _this;
        _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
                from._internal_metadata_);
        new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

        // @@protoc_insertion_point(copy_constructor:wechat.WechatRequest)
    }

    inline PROTOBUF_NDEBUG_INLINE WechatRequest::Impl_::Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena *arena)
            : user_name_(arena),
              friend_name_(arena),
              _cached_size_{0} {}

    inline void WechatRequest::SharedCtor(::_pb::Arena *arena) {
        new(&_impl_) Impl_(internal_visibility(), arena);
    }

    WechatRequest::~WechatRequest() {
        // @@protoc_insertion_point(destructor:wechat.WechatRequest)
        _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
        SharedDtor();
    }

    inline void WechatRequest::SharedDtor() {
        ABSL_DCHECK(GetArena() == nullptr);
        _impl_.user_name_.Destroy();
        _impl_.friend_name_.Destroy();
        _impl_.~Impl_();
    }

    const ::google::protobuf::MessageLite::ClassData *
    WechatRequest::GetClassData() const {
        PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
        ClassDataFull _data_ = {
                {
                        &_table_.header,
                        nullptr,  // OnDemandRegisterArenaDtor
                        nullptr,  // IsInitialized
                        PROTOBUF_FIELD_OFFSET(WechatRequest, _impl_._cached_size_),
                        false,
                },
                &WechatRequest::MergeImpl,
                &WechatRequest::kDescriptorMethods,
                &descriptor_table_wechat_2eproto,
                nullptr,  // tracker
        };
        ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
        ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
        return _data_.base();
    }

    PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
    const ::_pbi::TcParseTable<1, 2, 0, 49, 2> WechatRequest::_table_ = {
            {
                    0,  // no _has_bits_
                    0, // no _extensions_
                    2, 8,  // max_field_number, fast_idx_mask
                    offsetof(decltype(_table_), field_lookup_table),
                    4294967292,  // skipmap
                    offsetof(decltype(_table_), field_entries),
                    2,  // num_field_entries
                    0,  // num_aux_entries
                    offsetof(decltype(_table_), field_names),  // no aux_entries
                    &_WechatRequest_default_instance_._instance,
                    nullptr,  // post_loop_handler
                    ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
                    ::_pbi::TcParser::GetTable<::wechat::WechatRequest>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
            },
            {       {
                            // string friend_name = 2;
                            {::_pbi::TcParser::FastUS1,
                                                                                      {18, 63, 0, PROTOBUF_FIELD_OFFSET(
                                                                                              WechatRequest,
                                                                                              _impl_.friend_name_)}},
                            // string user_name = 1;
                                   {::_pbi::TcParser::FastUS1,
                                                                                               {10, 63, 0, PROTOBUF_FIELD_OFFSET(
                                                                                                       WechatRequest,
                                                                                                       _impl_.user_name_)}},
                    }},
            {       {
                            65535, 65535
                    }},
            {       {
                            // string user_name = 1;
                            {PROTOBUF_FIELD_OFFSET(WechatRequest, _impl_.user_name_), 0, 0,
                                    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
                            // string friend_name = 2;
                                   {PROTOBUF_FIELD_OFFSET(WechatRequest, _impl_.friend_name_), 0, 0,
                                           (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
                    }},
            // no aux_entries
            {       {
                            "\24\11\13\0\0\0\0\0"
                            "wechat.WechatRequest"
                            "user_name"
                            "friend_name"
                    }},
    };

    PROTOBUF_NOINLINE void WechatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:wechat.WechatRequest)
        ::google::protobuf::internal::TSanWrite(&_impl_);
        ::uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void) cached_has_bits;

        _impl_.user_name_.ClearToEmpty();
        _impl_.friend_name_.ClearToEmpty();
        _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
    }

    ::uint8_t *WechatRequest::_InternalSerialize(
            ::uint8_t *target,
            ::google::protobuf::io::EpsCopyOutputStream *stream) const {
        // @@protoc_insertion_point(serialize_to_array_start:wechat.WechatRequest)
        ::uint32_t cached_has_bits = 0;
        (void) cached_has_bits;

        // string user_name = 1;
        if (!this->_internal_user_name().empty()) {
            const std::string &_s = this->_internal_user_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "wechat.WechatRequest.user_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
        }

        // string friend_name = 2;
        if (!this->_internal_friend_name().empty()) {
            const std::string &_s = this->_internal_friend_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "wechat.WechatRequest.friend_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
        }

        if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
            target =
                    ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
                                    ::google::protobuf::UnknownFieldSet::default_instance), target, stream);
        }
        // @@protoc_insertion_point(serialize_to_array_end:wechat.WechatRequest)
        return target;
    }

    ::size_t WechatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wechat.WechatRequest)
        ::size_t total_size = 0;

        ::uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void) cached_has_bits;

        ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void *>(this));
        // string user_name = 1;
        if (!this->_internal_user_name().empty()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                    this->_internal_user_name());
        }

        // string friend_name = 2;
        if (!this->_internal_friend_name().empty()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                    this->_internal_friend_name());
        }

        return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
    }


    void
    WechatRequest::MergeImpl(::google::protobuf::MessageLite &to_msg, const ::google::protobuf::MessageLite &from_msg) {
        auto *const _this = static_cast<WechatRequest *>(&to_msg);
        auto &from = static_cast<const WechatRequest &>(from_msg);
        // @@protoc_insertion_point(class_specific_merge_from_start:wechat.WechatRequest)
        ABSL_DCHECK_NE(&from, _this);
        ::uint32_t cached_has_bits = 0;
        (void) cached_has_bits;

        if (!from._internal_user_name().empty()) {
            _this->_internal_set_user_name(from._internal_user_name());
        }
        if (!from._internal_friend_name().empty()) {
            _this->_internal_set_friend_name(from._internal_friend_name());
        }
        _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
    }

    void WechatRequest::CopyFrom(const WechatRequest &from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wechat.WechatRequest)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }


    void WechatRequest::InternalSwap(WechatRequest *PROTOBUF_RESTRICT other) {
        using std::swap;
        auto *arena = GetArena();
        ABSL_DCHECK_EQ(arena, other->GetArena());
        _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_name_, &other->_impl_.user_name_, arena);
        ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.friend_name_, &other->_impl_.friend_name_, arena);
    }

    ::google::protobuf::Metadata WechatRequest::GetMetadata() const {
        return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
    }
// ===================================================================

    class WechatReply::_Internal {
    public:
    };

    WechatReply::WechatReply(::google::protobuf::Arena *arena)
            : ::google::protobuf::Message(arena) {
        SharedCtor(arena);
        // @@protoc_insertion_point(arena_constructor:wechat.WechatReply)
    }

    inline PROTOBUF_NDEBUG_INLINE WechatReply::Impl_::Impl_(
            ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena *arena,
            const Impl_ &from, const ::wechat::WechatReply &from_msg)
            : reply_(arena, from.reply_),
              _cached_size_{0} {}

    WechatReply::WechatReply(
            ::google::protobuf::Arena *arena,
            const WechatReply &from)
            : ::google::protobuf::Message(arena) {
        WechatReply *const _this = this;
        (void) _this;
        _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
                from._internal_metadata_);
        new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

        // @@protoc_insertion_point(copy_constructor:wechat.WechatReply)
    }

    inline PROTOBUF_NDEBUG_INLINE WechatReply::Impl_::Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena *arena)
            : reply_(arena),
              _cached_size_{0} {}

    inline void WechatReply::SharedCtor(::_pb::Arena *arena) {
        new(&_impl_) Impl_(internal_visibility(), arena);
    }

    WechatReply::~WechatReply() {
        // @@protoc_insertion_point(destructor:wechat.WechatReply)
        _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
        SharedDtor();
    }

    inline void WechatReply::SharedDtor() {
        ABSL_DCHECK(GetArena() == nullptr);
        _impl_.reply_.Destroy();
        _impl_.~Impl_();
    }

    const ::google::protobuf::MessageLite::ClassData *
    WechatReply::GetClassData() const {
        PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
        ClassDataFull _data_ = {
                {
                        &_table_.header,
                        nullptr,  // OnDemandRegisterArenaDtor
                        nullptr,  // IsInitialized
                        PROTOBUF_FIELD_OFFSET(WechatReply, _impl_._cached_size_),
                        false,
                },
                &WechatReply::MergeImpl,
                &WechatReply::kDescriptorMethods,
                &descriptor_table_wechat_2eproto,
                nullptr,  // tracker
        };
        ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
        ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
        return _data_.base();
    }

    PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
    const ::_pbi::TcParseTable<0, 1, 0, 32, 2> WechatReply::_table_ = {
            {
                    0,  // no _has_bits_
                    0, // no _extensions_
                    1, 0,  // max_field_number, fast_idx_mask
                    offsetof(decltype(_table_), field_lookup_table),
                    4294967294,  // skipmap
                    offsetof(decltype(_table_), field_entries),
                    1,  // num_field_entries
                    0,  // num_aux_entries
                    offsetof(decltype(_table_), field_names),  // no aux_entries
                    &_WechatReply_default_instance_._instance,
                    nullptr,  // post_loop_handler
                    ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
                    ::_pbi::TcParser::GetTable<::wechat::WechatReply>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
            },
            {       {
                            // string reply = 1;
                            {::_pbi::TcParser::FastUS1,
                                                                                {10, 63, 0, PROTOBUF_FIELD_OFFSET(
                                                                                        WechatReply, _impl_.reply_)}},
                    }},
            {       {
                            65535, 65535
                    }},
            {       {
                            // string reply = 1;
                            {PROTOBUF_FIELD_OFFSET(WechatReply, _impl_.reply_), 0, 0,
                                    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
                    }},
            // no aux_entries
            {       {
                            "\22\5\0\0\0\0\0\0"
                            "wechat.WechatReply"
                            "reply"
                    }},
    };

    PROTOBUF_NOINLINE void WechatReply::Clear() {
// @@protoc_insertion_point(message_clear_start:wechat.WechatReply)
        ::google::protobuf::internal::TSanWrite(&_impl_);
        ::uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void) cached_has_bits;

        _impl_.reply_.ClearToEmpty();
        _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
    }

    ::uint8_t *WechatReply::_InternalSerialize(
            ::uint8_t *target,
            ::google::protobuf::io::EpsCopyOutputStream *stream) const {
        // @@protoc_insertion_point(serialize_to_array_start:wechat.WechatReply)
        ::uint32_t cached_has_bits = 0;
        (void) cached_has_bits;

        // string reply = 1;
        if (!this->_internal_reply().empty()) {
            const std::string &_s = this->_internal_reply();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "wechat.WechatReply.reply");
            target = stream->WriteStringMaybeAliased(1, _s, target);
        }

        if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
            target =
                    ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
                                    ::google::protobuf::UnknownFieldSet::default_instance), target, stream);
        }
        // @@protoc_insertion_point(serialize_to_array_end:wechat.WechatReply)
        return target;
    }

    ::size_t WechatReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wechat.WechatReply)
        ::size_t total_size = 0;

        ::uint32_t cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void) cached_has_bits;

        // string reply = 1;
        if (!this->_internal_reply().empty()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                    this->_internal_reply());
        }

        return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
    }


    void
    WechatReply::MergeImpl(::google::protobuf::MessageLite &to_msg, const ::google::protobuf::MessageLite &from_msg) {
        auto *const _this = static_cast<WechatReply *>(&to_msg);
        auto &from = static_cast<const WechatReply &>(from_msg);
        // @@protoc_insertion_point(class_specific_merge_from_start:wechat.WechatReply)
        ABSL_DCHECK_NE(&from, _this);
        ::uint32_t cached_has_bits = 0;
        (void) cached_has_bits;

        if (!from._internal_reply().empty()) {
            _this->_internal_set_reply(from._internal_reply());
        }
        _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
    }

    void WechatReply::CopyFrom(const WechatReply &from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wechat.WechatReply)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }


    void WechatReply::InternalSwap(WechatReply *PROTOBUF_RESTRICT other) {
        using std::swap;
        auto *arena = GetArena();
        ABSL_DCHECK_EQ(arena, other->GetArena());
        _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reply_, &other->_impl_.reply_, arena);
    }

    ::google::protobuf::Metadata WechatReply::GetMetadata() const {
        return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
    }
// @@protoc_insertion_point(namespace_scope)
}  // namespace wechat
namespace google {
    namespace protobuf {
    }  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
_static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_wechat_2eproto),
                ::std::false_type{});

#include "google/protobuf/port_undef.inc"
